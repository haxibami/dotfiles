[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_source = 'null-ls.nvim'

[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'
on_source = 'nvim-lsp-installer'

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
on_source = 'nvim-lspconfig'

[[plugins]]
on_event = 'BufEnter'
repo = 'neovim/nvim-lspconfig'
hook_source = '''
  source ~/.config/nvim/lua/lsprc.lua
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
depends = ['vim-vsnip-integ', 'friendly-snippets']
on_event = 'InsertEnter'
hook_add = '''
" Expand
imap <expr> <C-l> vsnip#expandable() ? '<Plug>(vsnip-expand)' : '<C-l>'
smap <expr> <C-l> vsnip#expandable() ? '<Plug>(vsnip-expand)' : '<C-l>'
" Jump forward or backward
imap <expr> <C-f> vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<C-f>'
smap <expr> <C-f> vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<C-f>'
imap <expr> <C-b> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<C-b>'
smap <expr> <C-b> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<C-b>'
let g:vsnip_snippet_dir = expand('~/dotfiles/nvim/snippets')
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'rafamadriz/friendly-snippets'

[[plugins]]
repo = 'Shougo/pum.vim'
hook_post_source = '''
  call pum#set_option('border', 'single')
  call pum#set_option('padding', v:true)
'''

[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = ['InsertEnter', 'CmdlineEnter']
depends = ['pum.vim', 'denops.vim', 'nvim-lspconfig']
hook_source = '''
  source ~/.config/nvim/lua/ddc/ddcrc.lua
'''

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
on_source = 'ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'

[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = 'ddc.vim'
hook_source = '''
  call popup_preview#enable()
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
on_source = 'ddc.vim'
hook_source = '''
  let g:signature_help_config = {
        \ 'style': 'virtual',
        \ 'border': v:true,
        \ }
  call signature_help#enable()
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
hook_source = '''
lua << EOF
require('nvim-autopairs').setup()
EOF
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['latex', 'tex']
hook_source = '''
  let g:vimtex_view_general_viewer = 'zathura'
  let g:vimtex_compiler_progname = 'nvr'
  let g:vimtex_view_general_options = "-x \"nvr +%{line} %{input}\" --synctex-forward @line:0:@tex @pdf"
  let g:vimtex_compiler_latexmk = {
      \ 'build_dir' : 'latexbuild',
      \}
  let g:vimtex_compiler_latexmk_engines = { '_': 'lualatex' }
  let g:tex_flavor = 'latex'
  let g:latex_latexmk_options = '-pdflua'
  let g:vimtex_syntax_conceal_disable = 1
  let g:vimtex_syntax_conceal = {
      \ 'accents': 1,
      \ 'cites': 0,
      \ 'fancy': 1,
      \ 'greek': 1,
      \ 'math_bounds': 0,
      \ 'math_delimiters': 1,
      \ 'math_fracs': 1,
      \ 'math_super_sub': 1,
      \ 'math_symbols': 1,
      \ 'sections': 0,
      \ 'styles': 0,
      \}
  let g:vimtex_complete_close_braces = 0
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_source = '''
  let g:fern#default_hidden=1
  let g:fern#renderer = "nerdfont"
'''
hook_add = '''
  nnoremap <C-E> :Fern . -reveal=% -drawer -toggle -width=40<CR>
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'
on_source = ['fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
on_source = ['fern.vim']
hook_source = '''
  let g:fern#renderer = "nerdfont"
'''

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
on_source = ['fern.vim']
hook_source = '''
  augroup my-glyph-palette
    autocmd! *
    autocmd FileType fern call glyph_palette#apply()
    autocmd FileType nerdtree,startify call glyph_palette#apply()
  augroup END
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['md', 'markdown', 'pandoc.markdown', 'rmd']
build = 'sh -c "cd app && yarn install"'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']

[[plugins]]
repo = 'simrat39/rust-tools.nvim'
on_ft = ['rust']

[[plugins]]
repo = 'mzlogin/vim-markdown-toc'
on_ft = ['markdown']

[[plugins]]
repo = 'whonore/Coqtail'
on_ft = ['coq']

[[plugins]]
repo = "jalvesaq/Nvim-R"
rev = "stable"
on_ft = ['r']
