### sway config file

## custom binding

# set modifier
set $mod Mod4

# enable binding on non-latin keys (ex. cyrillic)
set $mybind bindsym --to-code

set $left   h
set $down   j
set $up     k
set $right  l

set $bg             #c5c5e688
set $bg-inactive    #21192100
set $bg-urgent      #d9989c88
set $text-light     #d9ced988
set $text-dark      #33243388
set $text-inactive  #99829988

set $term alacritty

#set $menu dmenu_path | ~/.bin/mydofi.sh | xargs swaymsg exec --
set $menu ~/.bin/mywofi.sh

# start sway systemd target
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"


## look & feel

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Han Code JP 15

# set output & scaling
output HDMI-A-1 {
  res 3840x2160
  scale 1
}

# set virtual output (for wayvnc vnc server)
output HEADLESS-1 {
  res 3840x2160
  scale 1
}

# set mouse speed
input 1133:16534:Logitech_ERGO_M575S {
  pointer_accel 0.8
}

# set wallpaper
output "*" background ~/Pictures/wallpaper/arch_chan.png fill

# set inner and outer gaps
gaps outer 3
gaps inner 15
default_border pixel 4

# set window transparency
exec_always ~/.config/sway/window-transparency.sh

# set color theme
# class                 border        bground       text        indicator     child_border
client.focused          $bg           $bg           $text-dark  $bg           $bg
client.focused_inactive $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
client.unfocused        $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
client.urgent           $bg-urgent    $bg-urgent    $text-light $bg-urgent    $bg-urgent
client.placeholder      $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive

# set xkeyboard layout
input * {
  xkb_layout "us,jp,ru"
  xkb_model "jp106"
  xkb_options "grp:win_space_toggle"
}

# define status bar
bar {
  swaybar_command waybar
}


## background services

# set desktop environment unique variables
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway 

# start polkit service

exec eval $(/usr/bin/gnome-keyring-daemon --start);
exec export SSH_AUTH_SOCK;
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1;

# start other background apps
exec ddccontrol -p                      # get display info (brightness, etc...)
exec mako                               # notification daemon
exec fcitx5 -d                          # input system
exec myclipman restore                  # clipboard; previous session retrieval
exec wl-paste -t text --watch myclipman # clipboard manager
exec playerctld daemon                  # media controller
exec easyeffects --gapplication-service # sound equalizer

# start screenlocker
exec swayidle -w \
  timeout 600 'env LANG=en.US_UTF-8 swaylock -f' \
  timeout 1200 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'env LANG=en.US_UTF-8 swaylock -f' \

# start display gamma setting tool
exec gammastep-indicator

# start auto-tiling
exec autotiling

# start applets
exec nm-applet --indicator
exec blueman-applet
exec meteo-qt

# set gtk themes
exec_always ~/.bin/import-gsettings.sh \
              gtk-theme:gtk-theme-name \
              icon-theme:gtk-icon-theme-name \
              cursor-theme:gtk-cursor-theme-name

# set cursor theme
seat seat0 xcursor_theme Bibata-Original-Classic 24

# switch GTK theme according to time
exec_always "sh -c 'sleep 3; ~/.bin/gtk_modeswitch.sh'"

# set volume/brightness bar
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
set $DDCSOCK $XDG_RUNTIME_DIR/ddc.sock
exec mkfifo $DDCSOCK && tail -f $DDCSOCK | wob


## apps-related keybinds

# start a terminal
$mybind $mod+Return exec $term

# start browser
$mybind $mod+b exec firefox

# start file manager
$mybind $mod+e exec thunar

# calculator
$mybind Mod1+c exec rofi -show calc -modi calc -no-show-match -no-sort

# screenlock (manual)
$mybind $mod+control+l exec .bin/swaylight.sh

# brightness controls (requires non-root access to i2c devices)
$mybind $mod+F5 exec ddccontrol -f -r 0x10 -W -5 dev:/dev/i2c-1 | grep Brightness | cut -d "/" -f 2 | tee $WOBSOCK
$mybind $mod+F6 exec ddccontrol -f -r 0x10 -W +5 dev:/dev/i2c-1 | grep Brightness | cut -d "/" -f 2 | tee $WOBSOCK

# media controls
$mybind XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pamixer --get-volume > $WOBSOCK
$mybind control+XF86AudioRaiseVolume exec pactl set-sink-volume alsa_output.pci-0000_00_1f.3.analog-stereo +5% && pamixer --sink alsa_output.pci-0000_00_1f.3.analog-stereo --get-volume > $WOBSOCK
$mybind XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pamixer --get-volume > $WOBSOCK
$mybind control+XF86AudioLowerVolume exec pactl set-sink-volume alsa_output.pci-0000_00_1f.3.analog-stereo -5% && pamixer --sink alsa_output.pci-0000_00_1f.3.analog-stereo --get-volume > $WOBSOCK
$mybind XF86AudioRaiseVolume+shift exec pactl set-source-volume @DEFAULT_SOURCE@ +5% && pamixer --default-source --get-volume > $WOBSOCK
$mybind XF86AudioLowerVolume+shift exec pactl set-source-volume @DEFAULT_SOURCE@ -5% && pamixer --default-source --get-volume > $WOBSOCK
$mybind $mod+shift+m exec  pactl set-sink-mute @DEFAULT_SINK@ toggle && ( pamixer --get-mute && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK
$mybind $mod+m exec  pactl set-source-mute @DEFAULT_SOURCE@ toggle && ( pamixer --default-source --get-mute && echo 0 > $WOBSOCK ) || pamixer --default-source --get-volume > $WOBSOCK
$mybind $mod+comma exec playerctl previous
$mybind $mod+period exec ~/.bin/play-pause.sh
$mybind $mod+slash exec playerctl next
$mybind $mod+shift+comma exec playerctl --player playerctld position -10
$mybind $mod+shift+slash exec playerctl --player playerctld position +10

# show history with clipboard manager & wofi
$mybind $mod+v exec clipman pick -t wofi

# take screenshots
# [fullscreen, copy & save]
$mybind $mod+shift+a exec grimshot --notify save output ~/Pictures/screenshot/$(date "+%Y%m%d-%H%M%S")'_grim_full.png'
# [slurp, copy & save]
$mybind $mod+shift+s exec grimshot --notify save area ~/Pictures/screenshot/$(date "+%Y%m%d-%H%M%S")'_grim_area.png'
# [select window, copy & save]
$mybind $mod+shift+f exec grimshot --notify save window ~/Pictures/screenshot/$(date "+%Y%m%d-%H%M%S")'_grim_window.png'

# [fullscreen, only copy]
$mybind $mod+Print exec grimshot --notify copy output
# [slurp, only copy]
$mybind Print exec grimshot --notify copy area
# [select window, only copy]
$mybind $mod+shift+Print exec grimshot --notify copy window
# [wait for ? seconds, active window]
$mybind control+Print exec ~/.bin/waytshot.sh

# launch wofi, a rofi alternative on Wayland
$mybind Mod1+space exec $menu
$mybind Mod1+shift+space exec ~/.bin/myrofi.sh
$mybind Mod1+Tab exec ~/.bin/window_walker.sh


## window-related keybinds
# reload the configuration file
$mybind $mod+Shift+c reload

# exit sway
$mybind $mod+shift+e exec ~/.bin/swaypower.sh
#$mybind $mod+shift+e exec LANG=en.US_UTF-8 wlogout

# allow floating popup exceptions
for_window [app_id="firefox" title="Firefox — 共有インジケータ"] {
	floating enable
  sticky enable
  move up 1065 px
  move right 330 px
}

for_window [app_id="thunar" title="ファイル操作進行中"] {
  floating enable
}

for_window [app_id="qt5ct" title="Qt5 設定ツール"] {
  floating enable
}

for_window [app_id="fcitx5" title="Fcitx の設定"] {
  floating enable
}

for_window [app_id="blueman-manager"] {
  floating enable
}

for_window [class="flameshot" title="設定"] {
  floating enable
}

for_window [class="XEyes" title="xeyes"] {
  floating enable
}

for_window [app_id="showmethekey-gtk" title="Floating Window - Show Me The Key"] {
  floating enable
  sticky enable
  move down 950 px
  move right 1610 px
}

for_window [app_id="showmethekey-gtk"] {
  floating enable
}

for_window [app_id="zoom" title="zoom"] {
  floating enable
}

for_window [class="zoom" title="zoom"] {
  floating enable
}

for_window [class="zoom" title="Zoom"] {
  floating enable
}

for_window [app_id="zoom" title="設定"] {
  floating enable
  resize set 3000 1500
}

for_window [class="zoom" title="設定"] {
  floating enable
  resize set 3000 1500
}

for_window [app_id="zoom" title="zoom_linux_float_message_reminder"] {
  floating enable
  sticky enable
  move down 900 px
  move right 1575 px
  border none
}

for_window [class="zoom" title="Zoom - 許可取得済のアカウント"] {
  floating disable
}

for_window [class="zoom" title="ズーム会議"] {
  floating disable
}

for_window [class="zoom" title="Zoom ウェビナー"] {
  floating disable
}

for_window [class="zoom" title="^参加者"] {
  floating enable
  resize set 3000 1500
}

for_window [class="zoom" title="^ブレイクアウトルーム"] {
  floating enable
  resize set 2000 1500
}

for_window [app_id="meteo-qt.python3"] {
  floating enable
}

for_window [title="Inkporter"] {
  floating enable
}

for_window [title="Mozilla Firefox について"] {
  floating enable
}

# kill focused window
$mybind $mod+q kill

# change focus
$mybind $mod+$left focus left
$mybind $mod+$down focus down
$mybind $mod+$up focus up
$mybind $mod+$right focus right

# move focused window
$mybind $mod+Left move left
$mybind $mod+Down move down
$mybind $mod+Up move up
$mybind $mod+Right move right

# move focused window
#$mybind $mod+Shift+h move left
#$mybind $mod+Shift+j move down
#$mybind $mod+Shift+k move up
#$mybind $mod+Shift+l move right

# alternatively, you can use the cursor keys:
$mybind $mod+Shift+Left move left
$mybind $mod+Shift+Down move down
$mybind $mod+Shift+Up move up
$mybind $mod+Shift+Right move right

# split in horizontal orientation
$mybind $mod+shift+h splith

# split in vertical orientation
$mybind $mod+shift+v splitv

# enter fullscreen mode for the focused container
$mybind $mod+f fullscreen toggle

for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen

$mybind $mod+control+i inhibit_idle focus

# change container layout (stacked, tabbed, toggle split)
$mybind $mod+control+s layout stacking
$mybind $mod+control+w layout tabbed
$mybind $mod+control+e layout toggle split

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal

# toggle tiling / floating
$mybind $mod+Shift+space floating toggle

# change focus between tiling / floating windows
$mybind $mod+tab focus mode_toggle

# focus the parent container
$mybind $mod+p focus parent

# focus the child container
$mybind $mod+c focus child


## scratchpad

$mybind $mod+shift+minus move scratchpad
$mybind $mod+minus scratchpad show


## keybindings for workspaces

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
$mybind $mod+1 workspace number $ws1
$mybind $mod+2 workspace number $ws2
$mybind $mod+3 workspace number $ws3
$mybind $mod+4 workspace number $ws4
$mybind $mod+5 workspace number $ws5
$mybind $mod+6 workspace number $ws6
$mybind $mod+7 workspace number $ws7
$mybind $mod+8 workspace number $ws8
$mybind $mod+9 workspace number $ws9
$mybind $mod+0 workspace number $ws10

# move focused container to workspace
$mybind $mod+Shift+1 move container to workspace number $ws1
$mybind $mod+Shift+2 move container to workspace number $ws2
$mybind $mod+Shift+3 move container to workspace number $ws3
$mybind $mod+Shift+4 move container to workspace number $ws4
$mybind $mod+Shift+5 move container to workspace number $ws5
$mybind $mod+Shift+6 move container to workspace number $ws6
$mybind $mod+Shift+7 move container to workspace number $ws7
$mybind $mod+Shift+8 move container to workspace number $ws8
$mybind $mod+Shift+9 move container to workspace number $ws9
$mybind $mod+Shift+0 move container to workspace number $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        $mybind h resize shrink width 50 px
        $mybind j resize grow height 50 px
        $mybind k resize shrink height 50 px
        $mybind l resize grow width 50 px

        # same bindings, but for the arrow keys
        $mybind Left resize shrink width 10 px or 5 ppt
        $mybind Down resize grow height 10 px or 5 ppt
        $mybind Up resize shrink height 10 px or 5 ppt
        $mybind Right resize grow width 10 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        $mybind Return mode "default"
        $mybind Escape mode "default"
        $mybind $mod+r mode "default"
}

$mybind $mod+r mode "resize"

# media mode
mode "media" {
        # These bindings trigger as soon as you enter the resize mode

        # record screen
        $mybind control+r exec ~/.bin/swayrec.sh # obs(-cli)

        # cast screen as dummy camera
        $mybind Mod1+r exec ~/.bin/swayscrshare.sh # obs(-cli)

        # set default sink & sources
        $mybind d exec ~/.bin/swaypulse.sh # choose pipewire-pulse device (input & output)
        $mybind p exec ~/.bin/swaypulseprof.sh # choose card profile (ex. analog vs. HDMI)
        $mybind c exec ~/.bin/swaycolor.sh # color picker

        # back to normal
        $mybind $mod+g mode "default"
}

$mybind $mod+g mode "media"

include /etc/sway/config.d/*
