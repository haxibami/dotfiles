# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

set $left   h
set $down   j
set $up     k
set $right  l

set $bg             #c5c5e688
set $bg-inactive    #21192100
set $bg-urgent      #d9989c88
set $text-light     #d9ced988
set $text-dark      #33243388
set $text-inactive  #99829988

set $term alacritty
set $guaketerm guake-toggle

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Han Code JP 10

## look & feel
# set wallpaper
exec_always --no-startup-id "feh --bg-scale --no-fehbg ~/Pictures/wallpaper/arch_chan.png"

# set gaps
gaps inner 16
gaps outer 1
default_border pixel 2

# set color theme: Dracula loves night.
# class                 border  bground text    indicator child_border
client.focused          $bg           $bg           $text-dark  $bg           $bg
client.focused_inactive $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
client.unfocused        $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
client.urgent           $bg-urgent    $bg-urgent    $text-light $bg-urgent    $bg-urgent
client.placeholder      $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
# define status bar
exec_always --no-startup-id ~/.config/polybar/launch.sh

## startup services

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# start auth services

#exec "eval $(/usr/bin/gnome-keyring-daemon --start)"
#exec export SSH_AUTH_SOCK
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# start other background services
exec --no-startup-id dunst
exec --no-startup-id fcitx5 -d
exec --no-startup-id parcellite
exec --no-startup-id playerctld daemon
exec_always --no-startup-id "picom --config ~/.config/picom.conf"

# start screenlocker
# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen
exec_always --no-startup-id xss-lock --transfer-sleep-lock -- ~/.bin/myi3lock.sh --nofork

# start display gamma setting tool: you may not want to hurt your eyes.
exec --no-startup-id redshift-gtk
#exec --no-startup-id gammastep-indicator

# startup volume/brightness bars

set $XOBSOCK $XDG_RUNTIME_DIR/xob.sock
exec mkfifo $XOBSOCK && tail -f $XOBSOCK | xob
set $DDCSOCK $XDG_RUNTIME_DIR/ddc.sock
exec mkfifo $DDCSOCK && tail -f $DDCSOCK

exec_always sleep 2;ddcutil --bus 2 getvcp 10 | awk '{print $9}' | tr -d ',' > $DDCSOCK

# start graphical apps
#exec guake

## apps-related keybinds

# start a terminal
bindsym $mod+Return exec $term
#bindsym $mod+shift+Return exec guake-toggle

# start browser
bindsym $mod+b exec firefox

# start filemanager
bindsym $mod+e exec thunar

# screenlock (manual)
bindsym $mod+control+l exec ~/.bin/myi3lock.sh
bindsym $mod+control+shift+l exec systemctl suspend

# brightness controls (requires non-root access to i2c devices)
bindsym $mod+F5 exec ddccontrol -f -r 0x10 -W -5 dev:/dev/i2c-2 | grep Brightness | cut -d "/" -f 2 | tee $XOBSOCK $DDCSOCK
bindsym $mod+F6 exec ddccontrol -f -r 0x10 -W +5 dev:/dev/i2c-2 | grep Brightness | cut -d "/" -f 2 | tee $XOBSOCK $DDCSOCK

# media controls
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && pamixer --get-volume > $XOBSOCK
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && pamixer --get-volume > $XOBSOCK
bindsym XF86AudioRaiseVolume+shift exec --no-startup-id pactl set-source-volume @DEFAULT_SOURCE@ +5% && pamixer --source $(pamixer --list-sources | grep input.pci | cut -d " " -f-1) --get-volume > $XOBSOCK
bindsym XF86AudioLowerVolume+shift exec --no-startup-id pactl set-source-volume @DEFAULT_SOURCE@ -5% && pamixer --source $(pamixer --list-sources | grep input.pci | cut -d " " -f-1) --get-volume > $XOBSOCK
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym $mod+shift+m exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle ( pamixer --get-mute && echo 0 > $XOBSOCK ) || pamixer --get-volume > $XOBSOCK
bindsym $mod+m exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle ( pamixer --source &pamixer --list-sources | grep input.pci | cut -d " " -f-1) --get-mute && echo 0 > $XOBSOCK ) || pamixer --get-volume > $XOBSOCK
bindsym $mod+comma exec playerctl previous
bindsym $mod+period exec ~/.bin/play-pause.sh
#bindsym $mod+period exec playerctl --player playerctld play-pause
bindsym $mod+slash exec playerctl next
bindsym $mod+shift+comma exec playerctl --player playerctld position -10
bindsym $mod+shift+slash exec playerctl --player playerctld position +10

# take screenshots
# [fullscreen, copy & save]
#bindsym $mod+shift+a exec "flameshot full -c -p ~/Pictures/Screenshots/"
bindsym $mod+shift+a exec maim ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_maim_full.png'
# [area, copy & save]
bindsym $mod+shift+s exec maim -s ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_maim_area.png'
# [select window, copy & save]
bindsym $mod+shift+f exec "~/.bin/maimshot.sh"

# [fullscreen, copy]
bindsym $mod+Print exec maim | xclip -selection clipboard -t image/png
# [area, only only copy]
bindsym Print exec exec maim -s | xclip -selection clipboard -t image/png
# [select window, only copy]
#bindsym $mod+shift+Print exec maim -g $(i3-msg -t get_tree | jq -r '.. | select(.id? and .focused?) | .rect | "\(.width)x\(.height)+\(.x)+\(.y)"' | slop -f "%wx%h+%x+%y") | xclip -selection clipboard -t image/png
bindsym $mod+shift+Print exec maim -s | xclip -selection clipboard -t image/png


# launch rofi, a dmenu alternative on X11
#bindsym Mod1+space exec "rofi -show run"
bindsym Mod1+space exec "~/.bin/myrofi.sh"
bindsym Mod1+Tab exec "rofi -show window"

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop


## window-related keybinds
# reload the configuration file
#bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+c restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3?'  -b 'Reboot' 'systemctl reboot' -b 'Shutdown' 'systemctl poweroff' -b 'Logout' 'i3-msg exit'"
bindsym $mod+shift+e exec ~/.bin/i3power.sh

# kill focused window
bindsym $mod+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left move left
bindsym $mod+Down move down
bindsym $mod+Up move up
bindsym $mod+Right move right

# move focused window
#bindsym $mod+Shift+h move left
#bindsym $mod+Shift+j move down
#bindsym $mod+Shift+k move up
#bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+shift+h split h

# split in vertical orientation
bindsym $mod+shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+control+s layout stacking
bindsym $mod+control+w layout tabbed
bindsym $mod+control+e layout toggle split

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 5 ppt
        bindsym j resize grow height 10 px or 5 ppt
        bindsym k resize shrink height 10 px or 5 ppt
        bindsym l resize grow width 10 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 5 ppt
        bindsym Down resize grow height 10 px or 5 ppt
        bindsym Up resize shrink height 10 px or 5 ppt
        bindsym Right resize grow width 10 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
