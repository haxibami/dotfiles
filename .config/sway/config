# sway config file

# set modifier
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term alcrt

set $menu ~/.bin/mywofi.sh | mywofi.sh | xargs swaymsg exec --

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Han Code JP 15

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# set default browser(firefox) to run on Wayland: configured entry is needed
exec xdg-settings set default-web-browser wayfox.desktop

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# currently nm-applet inavailable on Wayland(>_<)

# set output & scaling
output HDMI-A-1 scale 1

# set compositor-unique variables
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway 


## look & feel
# set wallpaper
output "*" background ~/.config/i3/arch.png fill

# set inner and outer gaps
gaps inner 30
gaps outer 3
default_border pixel 3

# set window transparency
# set $opacity-active 0.80
# for_window [app_id=".*"] opacity $opacity-active

# set color theme: Dracula loves night.
# class                 border  bground text    indicator child_border
client.focused          #BD93F9 #BD93F9 #282A36 #BD93F9   #BD93F9
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #44475A #44475A #BFBFBF #44475A   #44475A
client.urgent           #FF5555 #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36

# set xkeyboard layout
input * {
  xkb_layout "us,ru"
  xkb_model "jp106"
  xkb_options "grp:win_space_toggle"
}

# define status bar: waybar is a great statusbar to customize.
bar {
  swaybar_command waybar
}

## startup services
# start auth services
exec "eval $(/usr/bin/gnome-keyring-daemon --start)"
exec export SSH_AUTH_SOCK
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# start other background services
exec mako
exec fcitx5 -d
exec clipman restore
exec wl-paste -t text --watch clipman store
exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"
exec playerctld daemon
exec thunar --daemon

# start screenlocker
exec swayidle -w \
  timeout 600 'env LANG=en.US_UTF-8 swaylock -f' \
  timeout 1200 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'env LANG=en.US_UTF-8 swaylock -f' \

# start display gamma setting tool: you may not want to hurt your eyes.

exec gammastep-indicator

# set gtk themes (lxappearance or other X11 based utility does not works)
exec_always ~/.bin/import-gsettings.sh \
              gtk-theme:gtk-theme-name \
              icon-theme:gtk-icon-theme-name \
              cursor-theme:gtk-cursor-theme-name

# set cursor theme
seat seat0 xcursor_theme Bibata-Original-Classic 24

# startup graphical apps


## apps-related keybinds

# start a terminal
bindsym $mod+Return exec $term

# start browser
bindsym $mod+b exec ~/.bin/wayfox.sh

# start file manager
bindsym $mod+e exec thunar

# screenlock (manual)
bindsym $mod+control+l exec env LANG=en.US_UTF-8 swaylock -f
bindsym $mod+control+shift+l exec systemctl suspend

# brightness controls (requires non-root access to i2c devices)
bindsym $mod+F5 exec ddcutil --bus 2 setvcp 10 - 10
bindsym $mod+F6 exec ddcutil --bus 2 setvcp 10 + 10

# media controls
bindsym XF86AudioRaiseVolume exec  pactl set-sink-volume @DEFAULT_SINK@ +5% 
bindsym XF86AudioLowerVolume exec  pactl set-sink-volume @DEFAULT_SINK@ -5% 
bindsym XF86AudioRaiseVolume+shift exec  pactl set-source-volume @DEFAULT_SOURCE@ +5% 
bindsym XF86AudioLowerVolume+shift exec  pactl set-source-volume @DEFAULT_SOURCE@ -5% 
bindsym $mod+shift+m exec  pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym $mod+m exec  pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym $mod+comma exec playerctl previous
bindsym $mod+period exec ~/.bin/play-pause.sh
#bindsym $mod+period exec playerctl --player playerctld play-pause
bindsym $mod+slash exec playerctl next
bindsym $mod+shift+comma exec playerctl --player playerctld position -10
bindsym $mod+shift+slash exec playerctl --player playerctld position +10

# show history with clipboard manager & wofi

bindsym $mod+control+h exec clipman pick -t wofi

# take screenshots
# [fullscreen, copy & save]
#bindsym $mod+shift+a exec grim - | wl-copy & wl-paste > ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_grim.png'
bindsym $mod+shift+a exec grimshot --notify save output ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_grim_full.png'
# [slurp, copy & save]
bindsym $mod+shift+s exec grimshot --notify save area ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_grim_area.png'
# [select window, copy & save]
bindsym $mod+shift+f exec grimshot --notify save window ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_grim_window.png'

# [fullscreen, only copy]
bindsym $mod+Print exec grimshot --notify copy output
# [slurp, only copy]
bindsym Print exec grimshot --notify copy area
# [select window, only copy]
bindsym $mod+shift+Print exec grimshot --notify copy window

#bindcode $mod+40 exec "rofi -modi drun,run -show drun"

# launch wofi, a rofi alternative on Wayland
#bindsym Mod1+space exec ~/.bin/mywofi.sh
bindsym Mod1+space exec $menu
bindsym Mod1+Tab exec ~/.bin/window_walker.sh
## window-related keybinds
# reload the configuration file
bindsym $mod+Shift+c reload

# exit sway
bindsym $mod+shift+e exec ~/.bin/powermenu.sh

# allow floating popup exceptions
for_window [app_id="firefox" title="Firefox — 共有インジケータ"] {
	floating enable,
  sticky enable,
}

for_window [app_id="thunar" title="ファイル操作進行中"] {
  floating enable
}

for_window [app_id="thunar" title="File Operation Progress"] {
  floating enable
}

for_window [app_id="tilix" title="Tilix の設定"] {
  floating enable
}

for_window [app_id="tilix" title="Tilix Preferences"] {
  floating enable
}

for_window [app_id="guake"] {
  floating enable
}

# kill focused window
bindsym $mod+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Left move left
bindsym $mod+Down move down
bindsym $mod+Up move up
bindsym $mod+Right move right

# move focused window
#bindsym $mod+Shift+h move left
#bindsym $mod+Shift+j move down
#bindsym $mod+Shift+k move up
#bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+shift+h splith

# split in vertical orientation
bindsym $mod+shift+v splitv

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+control+s layout stacking
bindsym $mod+control+w layout tabbed
bindsym $mod+control+e layout toggle split

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+tab focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

## scratchpad

bindsym $mod+shift+minus move scratchpad
bindsym $mod+minus scratchpad show

## keybindings for workspaces

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


include /etc/sway/config.d/*
